{{- $url := splitList "/" (index  .Values.ingress.hosts 0) }}
{{- $basePath := (rest $url | join "/") }}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ template "telescopes.fullname" . }}"
  labels:
    app: "{{ template "telescopes.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
  annotations:
{{ toYaml .Values.deploymentAnnotations | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
        app: {{ template "telescopes.fullname" . }}
        component: "{{ template "telescopes.name" . }}"
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
    spec:
      containers:
      - name: telescopes
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        env:
        {{- if .Values.ingress.hosts }}
        - name: TELESCOPES_BASEPATH
          value: /{{ $basePath }}
        {{- end }}
        command:
        - "/bin/sh"
        - "-ecx"
        - |
          /bin/telescopes \
          --listen-address=0.0.0.0:{{ .Values.service.internalPort }} \
          --log-level={{ .Values.app.logLevel }} \
          --cloudinfo-address={{ .Values.app.cloudInfoAddress }} \
        {{- if .Values.app.devMode }}
        {{- if .Values.app.vaultAddress }}
          --vault-address={{ .Values.app.vaultAddress }} \
        {{- end }}
        {{- if .Values.app.tokenSigningKey }}
          --token-signing-key={{ .Values.app.tokenSigningKey }} \
        {{- end }}
          --dev-mode
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ $basePath }}/status
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: {{ $basePath }}/status
            port: http
            httpHeaders:
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
