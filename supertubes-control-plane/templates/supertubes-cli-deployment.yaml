apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "supertubes-control-plane.fullname" . }}-manifest-controller
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "supertubes-control-plane.labels" . | nindent 4 }}
    control-plane: manifest-controller-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "supertubes-control-plane.name" . }}
      {{- include "supertubes-control-plane.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ include "supertubes-control-plane.name" . }}
        {{- include "supertubes-control-plane.labels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "supertubes-control-plane.fullname" . }}
      volumes:
        - name: serving-cert
          secret:
            secretName: {{ .Values.webhook.certs.secret }}
      containers:
        {{- if and .Values.prometheusMetrics.enabled .Values.prometheusMetrics.authProxy.enabled }}
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=10
          image: "{{ .Values.prometheusMetrics.authProxy.image.repository }}:{{ .Values.prometheusMetrics.authProxy.image.tag }}"
          name: rbac-proxy
          ports:
            - containerPort: 8443
              name: https
        {{- end }}
        - args:
            - --metrics-addr=127.0.0.1:8080
            - --enable-leader-election
            - --leader-election-namespace={{.Values.operator.leaderElection.namespace}}
          command:
            - /manager
          image: "{{ .Values.operator.image.repository }}:{{ .Values.operator.image.tag }}"
          imagePullPolicy: {{ .Values.operator.image.pullPolicy }}
          name: manager
          ports:
            - containerPort: 8080
              name: metrics
              protocol: TCP
            - containerPort: 9001
              name: alerts
              protocol: TCP
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: serving-cert
              readOnly: true
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      terminationGracePeriodSeconds: 10
