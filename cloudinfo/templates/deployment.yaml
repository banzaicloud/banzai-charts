apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "cloudinfo.fullname" . }}
  labels:
    app: {{ template "cloudinfo.name" . }}
    chart: {{ template "cloudinfo.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.deploymentLabels }}
{{ toYaml .Values.deploymentLabels | indent 4 }}
    {{- end }}
  annotations:
{{ toYaml .Values.deploymentAnnotations | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cloudinfo.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cloudinfo.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: {{ template "cloudinfo.fullname" . }}-credentials
            mountPath: /credentials
            readOnly: true
          - name: {{ template "cloudinfo.fullname" . }}-oci
            mountPath: /.oci
            readOnly: true
          args:
            - cloudinfo
            - --log-level={{ .Values.app.logLevel }}
            - --listen-address=0.0.0.0:{{ .Values.service.internalPort }}
            {{- range $key, $value := .Values.providers }}
            {{- if $value.enabled }}
            - --provider={{ $key }}
            {{- end }}
            {{- end }}
          env:
            - name: CLOUDINFO_BASEPATH
              value: {{ .Values.app.basePath }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /credentials/google.json
            - name: AZURE_AUTH_LOCATION
              value: /credentials/azure.json
            - name: ORACLE_CLI_CONFIG_LOCATION
              value: /.oci/oci.properties
            {{ if .Values.providers.amazon.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "cloudinfo.fullname" . }}
                  key: awsAccessKeyId
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "cloudinfo.fullname" . }}
                  key: awsSecretAccessKey
            {{ end }}
            {{ if .Values.providers.google.enabled }}
            - name: GCE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "cloudinfo.fullname" . }}
                  key: gceApiKey
            {{ end }}
            {{ if .Values.providers.azure.enabled }}
            - name: AZURE_SUBSCRIPTION_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "cloudinfo.fullname" . }}
                  key: azureSubscriptionId
            {{ end }}
            {{ if .Values.providers.alibaba.enabled }}
            - name: ALIBABA_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ template "cloudinfo.fullname" . }}
                  key: alibabaAccessKeyId
            - name: ALIBABA_ACCESS_KEY_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ template "cloudinfo.fullname" . }}
                  key: alibabaAccessKeySecret
            - name: ALIBABA_REGION_ID
              value: {{ .Values.providers.alibaba.alibabaRegionId }}
            {{ end }}
            {{ if .Values.metrics.enabled }}
            - name: METRICS_ENABLED
              value: "true"
            - name: METRICS_ADDRESS
              value: ":{{ .Values.metrics.port }}"
            {{ end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.internalPort }}
              protocol: TCP
            {{- if .Values.metrics.enabled }}
            - name:  {{ include "cloudinfo.name" . }}-prom
              containerPort: {{ .Values.metrics.port }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.basePath }}/status
              port: http
          readinessProbe:
            httpGet:
              path: {{ .Values.app.basePath }}/status
              port: http
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
        - name: {{ template "cloudinfo.fullname" . }}-credentials
          secret:
            secretName: {{ template "cloudinfo.fullname" . }}
            items:
            {{ if .Values.providers.google.enabled }}
            - key: gceCredentials
              path: google.json
            {{ end }}
            {{ if .Values.providers.azure.enabled }}
            - key: azureCredentials
              path: azure.json
            {{ end }}
            {{ if .Values.providers.oracle.enabled }}
            - key: ociKey
              path: oci_key.pem
            {{ end }}
        - name: {{ template "cloudinfo.fullname" . }}-oci
          configMap:
            name: "{{ template "cloudinfo.fullname" . }}"
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
