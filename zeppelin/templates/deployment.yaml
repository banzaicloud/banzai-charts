apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
    spec:
      volumes:
        - name: config-init-volume
          configMap:
            name: {{ template "fullname" . }}-config
            items:
            - key: log4j.properties
              path: log4j.properties
            - key: log4j_k8s_cluster.properties
              path: log4j_k8s_cluster.properties
            - key: shiro.ini.template
              path: shiro.ini.template
        - name: zeppelin-site-config-volume
          configMap:
            name: {{ template "fullname" . }}-site-config
            items:
            - key: zeppelin-site.xml
              path: zeppelin-site.xml
        - name: interpreter-config-volume
          configMap:
            name: {{ template "fullname" . }}-interpreter-config
            items:
            - key: interpreter.json
              path: interpreter.json
        - name: spark-config-init-volume
          configMap:
            name: {{ template "fullname" . }}-spark-config
            items:
            - key: spark-defaults.conf
              path: spark-defaults.conf
        - name: config-volume
          emptyDir: {}
        - name: spark-config-volume
          emptyDir: {}
      initContainers:
      - name: {{ .Chart.Name }}-init-config
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ZEPPELIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ default (printf "%s-password" (include "fullname" .)) .Values.userCredentialSecretName }}
                key: password
          - name: ADMIN_USER_NAME
            valueFrom:
              secretKeyRef:
                name: {{ default (printf "%s-password" (include "fullname" .)) .Values.userCredentialSecretName }}
                key: username
        envFrom:
          - secretRef:
              name: {{ default (printf "%s-spark-eventlog-storage" (include "fullname" .)) .Values.sparkEventLogStorage.secretName }}
        command:
          - '/bin/sh'
          - '-c'
          - >
            cp conf/* prepared_conf;
            export ADMIN_PASSWORD=$(java -jar /opt/zeppelin/bin/shiro-tools-hasher-1.3.2-cli.jar -gs -i 500000 -f shiro1 -a SHA-256 $ZEPPELIN_PASSWORD);
            sed 's|ADMIN_USER_NAME|'$ADMIN_USER_NAME'|g;s|ADMIN_PASSWORD|'$ADMIN_PASSWORD'|g' /opt/zeppelin/prepared_conf/shiro.ini.template > /opt/zeppelin/prepared_conf/shiro.ini;
            envsubst < /opt/spark/prepared_conf/spark-defaults.conf > /opt/spark/conf/spark-defaults.conf;
        volumeMounts:
          - name: config-init-volume
            mountPath: /opt/zeppelin/conf/log4j.properties
            subPath: log4j.properties
          - name: config-init-volume
            mountPath: /opt/zeppelin/conf/log4j_k8s_cluster.properties
            subPath: log4j_k8s_cluster.properties
          - name: config-init-volume
            mountPath: /opt/zeppelin/conf/shiro.ini.template
            subPath: shiro.ini.template
          - name: spark-config-volume
            mountPath: /opt/spark/conf
          - name: zeppelin-site-config-volume
            mountPath: /opt/zeppelin/conf/zeppelin-site.xml
            subPath: zeppelin-site.xml
          - name: interpreter-config-volume
            mountPath: /opt/zeppelin/conf/interpreter.json
            subPath: interpreter.json
          - name: config-volume
            mountPath: /opt/zeppelin/prepared_conf
          - name: spark-config-init-volume
            mountPath: /opt/spark/prepared_conf
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: ZEPPELIN_MEM
            value: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1 -Xms{{ .Values.resources.requests.memory }}M
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.pipelineIngress.baseURL }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 30
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: {{ .Values.pipelineIngress.baseURL }}
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 20
          timeoutSeconds: 1
        volumeMounts:
          - name: config-volume
            mountPath: /opt/zeppelin/conf
          - name: spark-config-volume
            mountPath: /opt/spark/conf
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}Mi
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}Mi
