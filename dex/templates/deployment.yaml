apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "dex.fullname" . }}
  labels:
    app: {{ template "dex.name" . }}
    chart: {{ template "dex.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "dex.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "dex.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "dex.serviceAccountName" . }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 10 }}
      containers:
      {{- if .Values.cloudsql.enabled  }}
      - name: cloudsql-proxy
        image: {{ .Values.cloudsql.image.repository }}:{{ .Values.cloudsql.image.tag }}
        imagePullPolicy: {{ .Values.cloudsql.image.pullPolicy }}
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.cloudsql.instance }}=tcp:5432"]
        securityContext:
          runAsUser: 2
          allowPrivilegeEscalation: false
      {{- end }}
      - name: dex-server
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        readinessProbe:
          httpGet:
            path: /{{ slice (splitList "/" .Values.config.issuer) 3 | join "/" }}/healthz
            port: http
            {{- if .Values.config.web.https }}
            scheme: HTTPS
            {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        ports:
          {{- toYaml .Values.ports | nindent 10 }}
        env:
          {{- toYaml .Values.env | nindent 10 }}
        envFrom:
          {{- toYaml .Values.envFrom | nindent 10 }}
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
        - mountPath: /etc/dex/tls/https/server
          name: https-tls
        {{- if .Values.extraVolumeMounts }}
        {{ toYaml .Values.extraVolumeMounts | nindent 8 }}
        {{- end }}
      volumes:
      - name: config
        configMap:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          name: {{ template "dex.fullname" . }}
      - name: https-tls
        secret:
          defaultMode: 420
          secretName: {{ default (printf "%s-tls" (include "dex.fullname" . )) .Values.certs.tlsName | quote }}
      {{- if ne (len .Values.extraVolumes) 0 }}
      {{ toYaml .Values.extraVolumes | nindent 6 }}
      {{- end }}

