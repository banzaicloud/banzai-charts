apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.app.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}

    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}"
        imagePullPolicy: {{ .Values.app.image.pullPolicy }}        
        args:
        - /etc/spark-resource-staging-server/resource-staging-server.properties

        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

        resources:
{{ toYaml .Values.app.resources | indent 12 }}

        volumeMounts:
        - mountPath: /etc/spark-resource-staging-server
          name: resource-staging-server-properties
        {{- if .Values.tls.enabled }}
        - mountPath: /mnt/secrets/resource-staging-server
          name: spark-rss-tls
          readOnly: true
        {{- end }}

      volumes:
      - configMap:
          name: {{ template "fullname" . }}
        name: resource-staging-server-properties
       {{- if .Values.tls.enabled }}
      - secret:
          secretName: {{ .Values.tls.name }}
        name: spark-rss-tls
       {{- end }}

