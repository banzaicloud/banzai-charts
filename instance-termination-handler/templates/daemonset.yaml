apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: "{{ template "instance-termination-handler.fullname" . }}"
  labels:
    app: "{{ template "instance-termination-handler.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
        app: {{ template "instance-termination-handler.name" . }}
        component: "{{ template "instance-termination-handler.fullname" . }}"
      annotations:
      {{- if .Values.metrics.enabled  }}
        prometheus.io/scrape: "true"
        prometheus.io/path: {{ .Values.metrics.endpoint | quote }}
      {{- end }}
      {{- if .Values.extraAnnotations }}
{{ toYaml .Values.extraAnnotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "instance-termination-handler.fullname" . }}
      containers:
      - name: instance-termination-handler
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        env:
          - name: ITH_HTTP_LISTENADDRESS
            value: ":{{ .Values.http.listenPort }}"
          - name: ITH_LOG_FORMAT
            value: {{ .Values.log.format | quote }}
          - name: ITH_LOG_LEVEL
            value: {{ .Values.log.level | quote }}
          - name: ITH_TERMDETECT_DEFAULTSECONDSUNTILTERMINATION
            value: {{ .Values.termdetect.defaultSecondsUntilTermination | quote }}
          - name: ITH_TERMNOTIFIER_TRIGGERENABLED
            value: {{ .Values.termnotifier.triggerEnabled | quote }}
          - name: ITH_TERMNOTIFIER_TRIGGERENDPOINT
            value: {{ .Values.termnotifier.triggerEndpoint | quote }}
          - name: ITH_ASGINSTANCETERMNOTIFIER_ENABLED
            value: {{ .Values.asgInstanceTermNotifier.enabled | quote }}
          - name: ITH_ASGINSTANCETERMNOTIFIER_HOOKNAME
            value: {{ .Values.asgInstanceTermNotifier.hookName | quote }}
          - name: ITH_ASGINSTANCETERMNOTIFIER_HOOKTIMEOUTSECONDS
            value: {{ .Values.asgInstanceTermNotifier.hookTimeoutSeconds | quote }}
          - name: ITH_ASGINSTANCETERMNOTIFIER_DRAINWAITTIMEOUTSECONDS
            value: {{ .Values.asgInstanceTermNotifier.drainWaitTimeoutSeconds | quote }}
          - name: ITH_ASGINSTANCETERMNOTIFIER_POLLINGINTERVALSECONDS
            value: {{ .Values.asgInstanceTermNotifier.pollingIntervalSeconds | quote }}
          - name: ITH_ASGINSTANCEDETACHER
            value: {{ .Values.asgInstanceDetacher.enabled | quote }}
          - name: ITH_ASGINSTANCEDETACHER
            value: {{ .Values.asgInstanceDetacher.asgLabelName | quote }}
          - name: ITH_METRICS_ENABLED
            value: {{ .Values.metrics.enabled | quote }}
          - name: ITH_METRICS_ENDPOINT
            value: {{ .Values.metrics.endpoint | quote }}
          - name: ITH_DRAINER_ENABLED
            value: {{ .Values.drainer.enabled | quote }}
          - name: ITH_DRAINER_DRAINWITHTAINT
            value: {{ .Values.drainer.drainWithTaint | quote }}
          - name: ITH_DRAINER_GRACEPERIODSECONDS
            value: {{ .Values.drainer.gracePeriodSeconds | quote }}
          - name: ITH_DRAINER_TIMEOUT
            value: {{ .Values.drainer.timeout | quote }}
          - name: MY_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
        ports:
        - name: http
          containerPort: {{ .Values.http.listenPort }}
        {{- if .Values.hostPort }}
          hostPort: {{ .Values.hostPort }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 120
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
            httpHeaders:
          initialDelaySeconds: 30
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
{{ toYaml .Values.resources | indent 10 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
