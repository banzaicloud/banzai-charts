# Default values for pipeline
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  auth:
    clientid: ""
    clientsecret: ""
  pipelineBasepath: /pipeline

pipelineExternalBaseURL: https://example.org/pipeline
signupredirectpath: /ui/

github:
  token: ""

replicaCount: 1

image:
  repository: banzaicloud/pipeline
  tag: latest
  pullPolicy: IfNotPresent

env: {}

service:
  name: pipeline
  type: ClusterIP
  internalPort: 9090
  externalPort:  9090
  tls: true

ingress:
  enabled: false
  annotations: {}
    #traefik.frontend.rule.type: PathPrefix
  hosts: []
    # - "/"
    # - "domain.com/xyz"
    # - "domain.com"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

strategy:
  type: recreate

# CA source for automated self sing cert generator
cert:
  source: file
  path: /sign-ca
  ca:
    key: ""
    cert: ""

logging:
  logformat: text
  loglevel: debug
  kubicornloglevel: debug

auth:
  jwtissueer: "https://banzaicloud.com/"
  jwtaudience: "https://pipeline.banzaicloud.com"
  clientid: ""
  clientsecret: ""
  cookieDomain: ""
  setCookieDomain: false
  secureCookie: true

ark:
  name: "ark"
  namespace: "pipeline-system"
  chart: "banzaicloud-stable/ark"
  chartVersion: "1.2.2"
  image: "banzaicloud/ark"
  imageTag: "v0.9.11"
  pullPolicy: "IfNotPresent"
  syncEnabled: true
  logLevel: "info"
  bucketSyncInterval: "10m"
  restoreSyncInterval: "20s"
  backupSyncInterval: "20s"
  restoreWaitTimeout: "5m"

spotguide:
  allowPrereleases: false
  sharedLibraryGitHubOrganization: "spotguides"

helm:
  retryAttempt: "30"
  retrySleepSeconds: "15"
  tillerVersion: "v2.12.2"
  stableRepositoryURL: "https://kubernetes-charts.storage.googleapis.com"
  banzaiRepositoryURL: "http://kubernetes-charts.banzaicloud.com/branch/master"

  path: "/cache/helm"

eks:
  templateLocation: "https://raw.githubusercontent.com/banzaicloud/pipeline/master/templates/eks"
  asgFulfillmentTimeout: "10m"

monitor:
  enabled: true
  configMap: prometheus-federation
  certSecret: prometheus-federation-secrets
  mountPath: /etc/prometheus/secrets

loggingOperator:
  chartVersion: ""
  image:
    tag: "0.0.5"

serviceMesh:
  istioChartVersion: "1.0.5"
  grafanaDashboardLocation: "https://raw.githubusercontent.com/banzaicloud/pipeline/master/dashboards/istio"

metrics:
  enabled: false
  port: 9900
  debug: true
  alertRulesEnabled: false
  serviceMonitor:
    enabled: false
    additionalLabels: {}

spotmetrics:
  enabled: true
  collectionInterval: "30s"

dns:
  domain: "example.org"

infra:
  headNodePoolName: "system"

cache:
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## Pipeline StateStore data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 1Gi

statestore:
  persistence:
    enabled: true

    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    ## Pipeline StateStore data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 128Mi

database:
  autoMigrateEnabled: false

## mysql image version
## ref: https://hub.docker.com/r/library/mysql/tags/
##
mysql:
  enabled: true
  nameOverride: pipeline-db
  mysqlDatabase: pipeline
  mysqlUser: bonanzabanzai



  ## Default: random 10 character string
  # mysqlPassword:

  initializationFiles:
    cicd-db.sql: |-
      CREATE DATABASE IF NOT EXISTS drone;
      GRANT ALL PRIVILEGES ON drone.* TO 'bonanzabanzai'@'%';
      FLUSH PRIVILEGES;


  ## Enable persistence using Persistent Volume Claims
  ## ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    enabled: false

##
## CloudSQL configuration
##
cloudsql:
  enabled: false
  instance: ""
  dbName: ""
  dbUserName: ""
  dbUserPass: ""
  image:
    repository: gcr.io/cloudsql-docker/gce-proxy
    tag: 1.11
    pullPolicy: IfNotPresent

anchore:
  enabled: false
  serviceEndpoint: ""
  username: admin
  secretName: ""
  secretKey: adminPassword

issue:
  githubOwner: ""
  githubRepository: ""


resources:
  requests:
    cpu: 250m
    memory: 256Mi

## Additional deployment labels and annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
deploymentLabels: {}
deploymentAnnotations: {}

vault:
  # Vault service endpoint
  serviceAddress: ""
  # The secret that holds the Vault CA cert.
  # If left empty SKIP_VERIFY will be used.
  tlsSecret: ""

cicd:
  url: ""
