# Default values for control-plane-k8s-charts
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

traefik:
  serviceType: LoadBalancer
  imageTag: 1.7.0-rc3
  dashboard:
    enabled: true
    ingress:
      enabled: true
      hosts:
        - /dashboard
    service:
      port: 8080
  rbac:
    enabled: true
  cpuLimit: 200m
  memoryLimit: 250Mi
  ssl:
    insecureSkipVerify: true
  metrics:
    prometheus:
      enabled: true
  persistence:
    enabled: false
    existingClaim: ""
  acme:
    persistence:
      existingClaim: ""

acmeStorageClaim:
  volumeName: ""

pipeline:
  image:
    tag: "latest"
    pullPolicy: Always

  ingress:
    enabled: true
    hosts:
       - "/"
    annotations:
      kubernetes.io/ingress.class: traefik
      ingress.kubernetes.io/ssl-redirect: "false"

  drone:
    enabled: true

  cloud:
    cloudprovider: aws
    keypath: "/opt/pipeline/.ssh"

  awsSecretAccessKey: ""
  awsAccessKeyId: ""

  anchore:
    enabled: false
    serviceEndpoint: ""

pipeline-ui:
  enabled: false
  ingress:
    enabled: false
    hosts:
       - "/ui"
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.frontend.rule.type: PathPrefix

telescopes:
  enabled: false
  app:
    basePath: /recommender
  ingress:
    enabled: true
    hosts:
       - "/recommender"
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.frontend.rule.type: PathPrefix

cloudinfo:
  enabled: false
  app:
    basePath: /cloudinfo
  ingress:
    enabled: true
    hosts:
       - "/cloudinfo"
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.frontend.rule.type: PathPrefix

drone:
  enabled: true
  ingress:
    enabled: false
    hosts:
       - "/build"
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.frontend.rule.type: PathPrefixStrip
  server:
    env:
      DRONE_DEBUG: "false"
      DRONE_PROVIDER: "github"
      DRONE_GITHUB: "true"

  cloudsql:
    enabled: false
    instance: ""
    dbName: ""
    dbUserName: ""
    dbUserPass: ""

thanos:
  enabled: false

prometheus:
  nodeExporter:
    enabled: false
  alertmanager:
    enabled: false
  thanosSidecar:
    enabled: false
  pushgateway:
    enabled: false

  server:
    baseURL: /prometheus-federation
    prefixURL: /prometheus-federation
    ingress:
      enabled: false
      hosts:
         - "/prometheus-federation"
      annotations:
        kubernetes.io/ingress.class: traefik
        traefik.frontend.rule.type: PathPrefix
    global:
      scrape_interval: 15s
      external_labels:
        monitor: prometheus
        replica: 'prometheus-federation'

    configMapOverrideName:
      prometheus-federation
    extraSecretMounts:
      - name: secret-files
        mountPath: /etc/prometheus/secrets
        subPath: ""
        secretName: prometheus-federation-secrets
        readOnly: true
  ## Prometheus server ConfigMap entries
  ##
  serverFiles:
    alerts: {}
    rules: {}

    prometheus.yml:
      rule_files:
        - /etc/config/rules
        - /etc/config/alerts

      scrape_configs: []


anchore-engine:
  enabled: false
  ingress:
    enabled: false
    hosts:
       - "/imagecheck"
    annotations:
      kubernetes.io/ingress.class: traefik
      traefik.frontend.rule.type: PathPrefixStrip

  postgresql:
    enabled: false
    postgresUser: ""
    postgresPassword: ""
    postgresDatabase: ""

  cloudsql:
    enabled: false
    instance: ""

spot-price-exporter:
  enabled: false

prometheus-mysql-exporter:
  enabled: false
  cloudsqlproxy:
    enabled: false
