apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: "kafka-dns"
  replicas: 3
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: kafka
      annotations:
    spec:
      initContainers:
      - name: wait-for-etcd-to-come-up
        image: tenstartups/etcdctl
        command: ['sh', '-c', 'until ETCDCTL_API=3 etcdctl --endpoints=etcd-cluster-client:2379 get "" --prefix; do echo waiting for etcd to come up; sleep 1; done;']
      terminationGracePeriodSeconds: 30
      containers:
      - name: broker
        image: banzaicloud/kafka:2.12-1.2.0-etcd-0.0.1
        env:
        - name: KAFKA_LOG4J_OPTS
          value: -Dlog4j.configuration=file:config/log4j.properties
        - name: JMX_PORT
          value: "5555"
        ports:
        - name: inside
          containerPort: 9092
        - name: outside
          containerPort: 9094
        - name: jmx
          containerPort: 5555
        command:
        - sh
        - -c
        - "./bin/kafka-server-start.sh config/server.properties --override metastore.connect=etcd://etcd-cluster-client:2379 --override log.retention.hours=168 --override log.dirs=/var/lib/kafka/data/topics --override auto.create.topics.enable=false --override broker.id=${HOSTNAME##*-}"
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: /var/lib/kafka/data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
