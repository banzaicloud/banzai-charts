# Default values for Fn
imagePullPolicy: Always

# If non-null, will override the cluster name
nameOverride: ''

fn:
  service:
    port: 80
    type: LoadBalancer
    annotations: {}

  ## API Ingress configuration options
  ##
  ingress:
    enabled: false
    annotations:
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
    tls:
        # - secretName: fn-api.cluster.local
        #   hosts:
        #     - fn-api.cluster.local
    url: fn-api.cluster.local



fnlb:
  image: fnproject/fnlb:latest
  logLevel: info
  resources: {}

fnserver:
  image: fnproject/fnserver:latest
  logLevel: info
  resources: {}
  nodeSelector: {}
  tolerations: []
  prometheus:
    enabled: true

ui:
  enabled: true
  fnui:
    image: fnproject/ui:latest
    resources: {}
  flowui:
    image: fnproject/flow:ui
    resources: {}
  service:
    flowuiPort: 3000
    fnuiPort: 80
    type: LoadBalancer
    annotations: {}

  ## UI Ingress configuration options
  ##
  ingress:
    enabled: false
    annotations:
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
    tls:
        # - secretName: fn-ui.cluster.local
        #   hosts:
        #     - fn-ui.cluster.local
    url: fn-ui.cluster.local



flow:
  image: fnproject/flow:latest
  logLevel: info
  service:
    port: 80
    type: ClusterIP
    annotations: {}
  resources: {}


##
## MySQL chart configuration
##
mysql:
  persistence:
    enabled: false
    nodeSelector: mysql-storage
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    storageClass: mysql
    accessMode: ReadWriteOnce
    size: 8Gi

  mysqlDatabase: fndb
  mysqlUser: fnapp
  mysqlPassword: boomsauce

##
## Redis chart configuration
##
redis:
  persistence:
    enabled: false
    nodeSelector: redis-storage
    storageClass: redis
    accessMode: ReadWriteOnce
    size: 8Gi
  usePassword: false
