# Default values for control-plane-k8s-charts
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

traefik:
  serviceType: NodePort
  dashboard:
    enabled: false
    domain: ""
  rbac:
    enabled: true
  cpuLimit: 200m
  memoryLimit: 250Mi

pipeline:
  ingress:
    auth:
      enabled: false


  IngressUrl: ""

  awsSecretAccessKey: ""
  awsAccessKeyId: ""

  Slack:
    WebhookUrl: ""
    Channel: ""

drone:
  server:
    env:
      DRONE_DEBUG: "true"
      DRONE_ORGS: ""
      DRONE_PROVIDER: "github"
      DRONE_GITHUB: "true"
      DRONE_GITHUB_CLIENT: ""
      DRONE_GITHUB_SECRET: ""

grafana:
  server:
    httpPort: 80
  
    ingress:
      enabled: false

    installPlugins: "mtanda-histogram-panel"

    persistentVolume:
      enabled: false

    adminUser: "admin"
    adminPassword: ""

    setDatasource:
        enabled: true
        datasource:
          name: prometheus
          type: prometheus
          url: http://prometheus-server:80/prometheus
          access: proxy
          jsonData: null
          isDefault: true
        restartPolicy: OnFailure
        image: appropriate/curl:latest

  serverConfigFile:
    grafana.ini: |
      ; instance_name = ${HOSTNAME}
      [paths]
      data = /var/lib/grafana/data
      logs = /var/log/grafana
      plugins = /var/lib/grafana/plugins

      [server]
      ;protocol = http
      ;http_addr =
      ;http_port = 3000
      ;domain = localhost
      ;enforce_domain = false
      root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana
      ;router_logging = false
      ;static_root_path = public
      ;enable_gzip = false
      ;cert_file =
      ;cert_key =

      [database]
      ;type = sqlite3
      ;host = 127.0.0.1:3306
      ;name = grafana
      ;user = root
      ;password =
      ;ssl_mode = disable
      ;path = grafana.db

      [session]
      ;provider = file
      ;provider_config = sessions
      ;cookie_name = grafana_sess
      ;cookie_secure = false
      ;session_life_time = 86400

      [analytics]
      ;reporting_enabled = true
      check_for_updates = true
      ;google_analytics_ua_id =

      [security]
      ;admin_user = admin
      ;admin_password = admin
      ;secret_key = 
      ;login_remember_days = 7
      ;cookie_username = grafana_user
      ;cookie_remember_name = grafana_remember
      ;disable_gravatar = false
      ;data_source_proxy_whitelist =

      [snapshots]
      ;external_enabled = true
      ;external_snapshot_url = https://snapshots-origin.raintank.io
      ;external_snapshot_name = Publish to snapshot.raintank.io

      [users]
      ;allow_sign_up = true
      ;allow_org_create = true
      ;auto_assign_org = true
      ;auto_assign_org_role = Viewer
      ;login_hint = email or username
      ;default_theme = dark

      [auth.anonymous]
      ;enabled = false
      ;org_name = Main Org.
      ;org_role = Viewer

      [auth.github]
      ;enabled = false
      ;allow_sign_up = false
      ;client_id = some_id
      ;client_secret = some_secret
      ;scopes = user:email,read:org
      ;auth_url = https://github.com/login/oauth/authorize
      ;token_url = https://github.com/login/oauth/access_token
      ;api_url = https://api.github.com/user
      ;team_ids =
      ;allowed_organizations =

      [auth.google]
      ;enabled = false
      ;allow_sign_up = false
      ;client_id = some_client_id
      ;client_secret = some_client_secret
      ;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
      ;auth_url = https://accounts.google.com/o/oauth2/auth
      ;token_url = https://accounts.google.com/o/oauth2/token
      ;api_url = https://www.googleapis.com/oauth2/v1/userinfo
      ;allowed_domains =

      [auth.proxy]
      ;enabled = false
      ;header_name = X-WEBAUTH-USER
      ;header_property = username
      ;auto_sign_up = true

      [auth.basic]
      ;enabled = true

      [auth.ldap]
      ;enabled = false
      ;config_file = /etc/grafana/ldap.toml

      [smtp]
      ;enabled = false
      ;host = localhost:25
      ;user =
      ;password =
      ;cert_file =
      ;key_file =
      ;skip_verify = false
      ;from_address = admin@grafana.localhost

      [emails]
      ;welcome_email_on_sign_up = false

      [log]
      mode = console
      level = info

      [log.console]
      ;level =  
      ;format = console

      [event_publisher]
      ;enabled = false
      ;rabbitmq_url = amqp://localhost/
      ;exchange = grafana_events

      [dashboards.json]
      enabled = true
      path = /var/lib/grafana/dashboards

      [metrics]
      ;enabled           = true
      ;interval_seconds  = 10

      ; [metrics.graphite]
      ; address = localhost:2003
      ; prefix = prod.grafana.%(instance_name)s.

      [grafana_net]
      url =
        

prometheus:
  rbac:
    create: true

  ingress:
    auth:
      enabled: false

  alertmanager:
    enabled: true
    persistentVolume:
      enabled: false

    configMapOverrideName: cp-alertmanager

    ingress:
      enabled: false
    baseURL: /alertmanager

    extraArgs:
      "web.external-url": "http://localhost:9093/alertmanager"

    slack_api_url: ""
    slack_channel: ""

    smtp_address: ""
    smtp_username: ""
    smtp_password: ""
    smtp_to: ""
    smtp_from: ""

  nodeExporter:
    enabled: false


  server:

    alertmanagerURL: http://prometheus-alertmanager:80/alertmanager

    ingress:
      enabled: false

    baseURL: /prometheus

    persistentVolume:
      enabled: false
    extraArgs:
      "query.staleness-delta": "5m0s"
      "web.external-url": "http://localhost:9090/prometheus"

    extraHostPathMounts:
      - name: pipeline-statestore
        mountPath:  /opt/pipeline/statestore
        hostPath:  /opt/pipeline/statestore
        readOnly: true


  pushgateway:
    enabled: false

  serverFiles:
    k8sclusters.json: |-
      

    prometheus.yml: |-      
      global:
        scrape_interval: 10s
        scrape_timeout: 7s
        evaluation_interval: 15s

        scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
        evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
        # scrape_timeout is set to the global default (10s).

        # Attach these labels to any time series or alerts when communicating with
        # external systems (federation, remote storage, Alertmanager).

      rule_files:
        - /etc/config/*.rules

      scrape_configs:

        - job_name: 'federate'

          honor_labels: true
          metrics_path: '/prometheus/federate'
          
          scheme: http

          tls_config:
            # ca_file: /certs/ca.crt
            # If your node certificates are self-signed or use a different CA to the
            # master CA, then disable certificate verification below. Note that
            # certificate verification is an integral part of a secure infrastructure
            # so this should only be disabled in a controlled environment. You can
            # disable certificate verification by uncommenting the line below.
            #
            insecure_skip_verify: true

          basic_auth:
            username: 'admin'
            password: '1GLutrzynYsF'

          params:
            'match[]':
              - '{job="kubernetes-nodes"}'
              - '{job="kubernetes-apiservers"}'
              - '{job="kubernetes-service-endpoints"}'
              - '{job="kubernetes-cadvisor"}'
              - '{job="node_exporter"}'

          file_sd_configs:
            - files:
              - /etc/config/k8sclusters.json

          relabel_configs:
          - source_labels: [__address__]
            action: replace
            regex: (.+):(?:\d+)
            replacement: ${1}
            target_label: cluster
