apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}

    spec:
      initContainers:
      - name: check-db-service
        image: busybox
        command: ['sh', '-c', 'until nslookup {{ .Release.Name }}-pipeline-db; do echo waiting for {{ .Release.Name }}-pipeline-db; sleep 1; done;']
      - name: check-db-port
        image: busybox
        command: ['sh', '-c', 'echo STATUS nc -w 2 {{ .Release.Name }}-pipeline-db 3306']

      containers:
      - name: pipeline
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}        
        env:
        - name: KUBERNETES_RELEASE_NAME
          value: "{{ .Release.Name }}"

        - name: PIPELINE_DATABASE_HOST
          value: "{{ .Release.Name }}-pipeline-db"
        - name: PIPELINE_DATABASE_DBNAME
          value: {{ default "" .Values.mariadb.mariadbDatabase | quote }}
        - name: PIPELINE_DATABASE_USER
          value: {{ default "" .Values.mariadb.mariadbUser | quote }}
        - name: PIPELINE_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name:  "{{ .Release.Name }}-pipeline-db"
              key: mariadb-password

        - name: PIPELINE_LOGGING_LOGFORMAT
          value: {{ .Values.logging.logformat | quote }}
        - name: PIPELINE_LOGGING_LOGLEVEL
          value: {{ .Values.logging.loglevel | quote }}
        - name: PIPELINE_LOGGING_KUBICORNLOGLEVEL
          value: {{ .Values.logging.kubicornloglevel | quote }}

        - name: PIPELINE_CLOUD_CLOUDPROVIDER
          value: {{ .Values.cloud.cloudprovider | quote }}
        - name: PIPELINE_CLOUD_CLOUDPROFILE
          value: {{ .Values.cloud.cloudprofile | quote }}
        - name: PIPELINE_CLOUD_GKECREDENTIALPATH
          value: {{ .Values.cloud.gkeCredentialPath | quote }}
        - name: PIPELINE_CLOUD_KEYPATH
          value: {{ .Values.cloud.keypath | quote }}

        - name: PIPELINE_AUTH_ENABLED
          value: {{ .Values.auth.keypath | quote }}
        - name: PIPELINE_AUTH_CLIENTID
          value: {{ .Values.auth.clientid | quote }}
        - name: PIPELINE_AUTH_CLIENTSECRET
          value: {{ .Values.auth.clientsecret | quote }}
        - name: PIPELINE_AUTH_TOKENSIGNGKEY
          value: {{ randAlphaNum 16 | quote }}
        - name: PIPELINE_AUTH_JWTISSUEER
          value: {{ .Values.auth.jwtissueer | quote }}
        - name: PIPELINE_AUTH_JWTAUDIENCE
          value: {{ .Values.auth.jwtaudience | quote }}

        - name: PIPELINE_DRONE_ENABLED
          value: {{ .Values.drone.enabled | quote }}

        - name: PIPELINE_HELM_RETRYATTEMPT
          value: {{ .Values.helm.retryAttempt | quote }}
        - name: PIPELINE_HELM_RETRYSLEEPSECONDS
          value: {{ .Values.helm.enabled | quote }}
        - name: PIPELINE_HELM_STABLEREPOSITORYURL
          value: {{ .Values.helm.stableRepositoryURL | quote }}
        - name: PIPELINE_HELM_BANZAIREPOSITORYURL
          value: {{ .Values.helm.banzaiRepositoryURL | quote }}


        - name: SLACK_WEBHOOK_URL
          value: "{{ .Values.Slack.WebhookUrl }}"
        - name: SLACK_CHANNEL
          value: "{{ .Values.Slack.Channel }}"

        - name: PIPELINE_HELM_RETRYATTEMPT
          value: "{{ .Values.Helm.retryAttempt }}"
        - name: PIPELINE_HELM_RETRYSLEEPSECONDS
          value: "{{ .Values.Helm.retrySleepSeconds }}"

        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: awsSecretAccessKey
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: awsAccessKeyId

        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: azureClientId
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: azureClientSecret
        - name: AZURE_SUBSCRIPTION_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: azureSubscriptionId
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: azureTenantId

        - name: VAULT_ADDR
          value: http://{{ .Release.Name }}-vault:8200
    
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 15
        readinessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: 10

        resources:
{{ toYaml .Values.resources | indent 12 }}

        volumeMounts:
        - name: config-volume
          mountPath: /root/config/
        - mountPath: /root/.ssh
          name: ssh
        - mountPath: /statestore
          name: statestore


      volumes:
      - name: config-volume
        configMap:
          name: "{{ template "fullname" . }}"
      - name: ssh
        hostPath:
          path: /opt/pipeline/.ssh/
      - name: statestore
        hostPath:
          path: /opt/pipeline/statestore/

      serviceAccountName: pipeline
