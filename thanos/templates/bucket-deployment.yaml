{{ if .Values.bucket.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.componentname" (list $ "bucket") }}
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: bucket
{{ with .Values.bucket.deploymentLabels }}{{ toYaml . | indent 4 }}{{ end -}}
  {{- with .Values.bucket.deploymentAnnotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.bucket.replicaCount | default 1 }}
  {{- with  .Values.bucket.strategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: bucket
{{ with .Values.bucket.deploymentMatchLabels }}{{ toYaml . | indent 6 }}{{ end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: bucket
{{ with  .Values.bucket.labels }}{{ toYaml . | indent 8 }}{{ end }}
      {{- with  .Values.bucket.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: thanos-bucket
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.bucket.extraEnv }}
        env: {{ toYaml . | nindent 8 }}
        {{- end }}
        args:
          - "tools"
          - "bucket"
          - "web"
          - "--log.level={{ .Values.bucket.logLevel }}"
          - "--log.format={{ .Values.bucket.logFormat }}"
          - "--http-address=0.0.0.0:{{ .Values.bucket.http.port }}"
          - "--objstore.config-file=/etc/config/object-store.yaml"
          {{- if .Values.bucket.refresh }}
          - "--refresh={{ .Values.bucket.refresh }}"
          {{- end }}
          {{- if .Values.bucket.timeout }}
          - "--timeout={{ .Values.bucket.timeout }}"
          {{- end }}
          {{- if .Values.bucket.label }}
          - "--label={{ .Values.bucket.label }}"
          {{- end }}
          {{ with .Values.bucket.extraArgs }}{{ toYaml . | nindent 10 }}{{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.bucket.http.port }}
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
            readOnly: true
        resources: {{ toYaml .Values.bucket.resources | nindent 10 }}
      volumes:
      - name: config-volume
        secret:
          {{- if .Values.objstoreSecretOverride }}
          secretName: "{{ .Values.objstoreSecretOverride }}"
          {{- else }}
          secretName: {{ include "thanos.fullname" . }}
          {{- end }}
        {{- with .Values.bucket.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.bucket.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.bucket.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.bucket.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
        {{- end }}
        {{- end }}
      {{- with  .Values.bucket.serviceAccount }}
      serviceAccountName: "{{ . }}"
      {{- end }}
