{{ if .Values.rule.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "thanos.componentname" (list $ "rule") }}
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: rule
{{ with .Values.rule.statefulsetLabels }}{{ toYaml . | indent 4 }}{{ end -}}
  {{- with .Values.rule.statefulsetAnnotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.rule.autoscaling.enabled }}
  replicas: {{ .Values.rule.replicaCount | default 1 }}
  {{- end }}
  {{- with  .Values.rule.updateStrategy }}
  updateStrategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: rule
{{ with .Values.rule.statefulsetMatchLabels }}{{ toYaml . | indent 6 }}{{ end }}
  serviceName: {{ include "thanos.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: rule
{{ with  .Values.rule.labels }}{{ toYaml . | indent 8 }}{{ end }}
      {{- with  .Values.rule.annotations }}
      annotations: {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: thanos-rule
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources: {{ toYaml .Values.rule.resources | nindent 10 }}
        {{- with .Values.rule.extraEnv }}
        env: {{ toYaml . | nindent 8 }}
        {{- end }}
        args:
        - "rule"
        - "--data-dir=/var/thanos/store"
        - "--log.level={{ .Values.rule.logLevel }}"
        - "--log.format={{ .Values.rule.logFormat }}"
        - "--http-address=0.0.0.0:{{ .Values.rule.http.port }}"
        - "--grpc-address=0.0.0.0:{{ .Values.rule.grpc.port }}"
        - "--objstore.config-file=/etc/config/object-store.yaml"
        - "--rule-file=/etc/rules/*.yaml"
        {{- range $key, $val := .Values.rule.ruleLabels }}
        - '--label={{ $key }}={{ $val | quote }}'
        {{- end }}
        {{- if .Values.rule.resendDelay }}
        - "--resend-delay={{ .Values.rule.resendDelay }}"
        {{- end }}
        {{- if .Values.rule.evalInterval }}
        - "--eval-interval={{ .Values.rule.evalInterval }}"
        {{- end }}
        {{- if .Values.rule.tsdbBlockDuration }}
        - "--tsdb.block-duration={{ .Values.rule.tsdbBlockDuration }}"
        {{- end }}
        {{- if .Values.rule.tsdbRetention }}
        - "--tsdb.retention={{ .Values.rule.tsdbRetention }}"
        {{- end }}
        {{- if .Values.rule.webRoutePrefix }}
        - "--web.route-prefix={{ .Values.rule.webRoutePrefix }}"
        {{- end }}
        {{- if .Values.rule.webExternalPrefix }}
        - "--web.external-prefix={{ .Values.rule.webExternalPrefix }}"
        {{- end }}
        {{- if .Values.rule.webPrefixHeader }}
        - "--web.prefix-header={{ .Values.rule.webPrefixHeader }}"
        {{- end }}
        {{- if .Values.rule.queryDNSDiscovery }}
        - "--query=dnssrv+_http._tcp.{{ include "thanos.componentname" (list $ "query") }}-http.{{ .Release.Namespace }}.svc.cluster.local"
        {{- end  }}
        {{- range .Values.rule.alertmanagers }}
        - "--alertmanagers.url={{ . }}"
        {{- end  }}
        {{- if .Values.rule.alertmanagersSendTimeout }}
        - "--alertmanagers.send-timeout={{ .Values.rule.alertmanagersSendTimeout }}"
        {{- end }}
        {{- if .Values.rule.alertQueryUrl }}
        - "--alert.query-url={{ .Values.rule.alertQueryUrl }}"
        {{- end }}
        {{- range .Values.rule.alertLabelDrop }}
        - "--alert.label-drop={{ . }}"
        {{- end  }}
        {{- if .Values.rule.extraArgs }}
        {{- toYaml .Values.rule.extraArgs | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.rule.http.port }}
        - name: grpc
          containerPort: {{ .Values.rule.grpc.port }}
        volumeMounts:
        - name: rule-volume
          mountPath: /etc/rules
          readOnly: true
        - name: config-volume
          mountPath: /etc/config
          readOnly: true
        - name: data
          mountPath: /var/thanos/store
        {{- if .Values.rule.certSecretName }}
        - mountPath: /etc/certs
          name: {{ .Values.rule.certSecretName }}
          readOnly: true
        {{- end }}
      volumes:
      - name: data
        emptyDir: {}
      - name: config-volume
        secret:
          {{- if .Values.objstoreSecretOverride }}
          secretName: "{{ .Values.objstoreSecretOverride }}"
          {{- else }}
          secretName: {{ include "thanos.fullname" . }}
          {{- end }}
      - name: rule-volume
        configMap:
          {{- if empty .Values.rule.ruleOverrideName }}
          name: {{ include "thanos.fullname" . }}-rules
          {{- else }}
          name: {{ .Values.rule.ruleOverrideName }}
          {{- end }}
      {{- if .Values.rule.certSecretName }}
      - name: {{ .Values.rule.certSecretName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.rule.certSecretName }}
      {{- end }}
      {{- if .Values.rule.livenessProbe }}
      livenessProbe: {{ toYaml .Values.rule.livenessProbe | nindent 8 }}
      {{- end }}
      {{- if .Values.rule.readinessProbe }}
      readinessProbe: {{ toYaml .Values.rule.readinessProbe | nindent 8 }}
      {{- end }}
      {{- with .Values.rule.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rule.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rule.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rule.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with  .Values.rule.serviceAccount }}
      serviceAccountName: "{{ . }}"
      {{- end }}
{{- end }}
