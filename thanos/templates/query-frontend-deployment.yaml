{{ if .Values.queryFrontend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "thanos.componentname" (list $ "query-frontend") }}
  labels:
    app.kubernetes.io/name: {{ include "thanos.name" . }}
    helm.sh/chart: {{ include "thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/component: query-frontend
{{ with .Values.queryFrontend.deploymentLabels }}{{ toYaml . | indent 4 }}{{ end }}
  {{- with .Values.queryFrontend.deploymentAnnotations }}
  annotations: {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.queryFrontend.autoscaling.enabled  }}
  replicas: {{ .Values.queryFrontend.replicaCount | default 1 }}
  {{- end }}
  {{- with  .Values.queryFrontend.strategy }}
  strategy: {{ toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "thanos.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: query-frontend
{{ with .Values.queryFrontend.deploymentMatchLabels }}{{ toYaml . | indent 6 }}{{ end }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "thanos.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: query-frontend
{{ with  .Values.queryFrontend.labels }}{{ toYaml . | indent 8 }}{{ end }}
      {{- if or .Values.queryFrontend.annotations .Values.queryFrontend.metrics.annotations.enabled }}
      annotations:
      {{- end }}
      {{- with  .Values.queryFrontend.annotations }}{{ toYaml . | nindent 8 }}{{- end }}
      {{- if .Values.queryFrontend.metrics.annotations.enabled  }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.queryFrontend.http.port }}"
      {{- end }}
    spec:
      containers:
      - name: thanos-query-frontend
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.queryFrontend.extraEnv }}
        env: {{ toYaml . | nindent 8 }}
        {{- end }}
        args:
        - "query-frontend"
        - "--log.level={{ .Values.queryFrontend.log.level }}"
        - "--log.format={{ .Values.queryFrontend.log.format }}"
        {{- if .Values.queryFrontend.log.request.decision }}
        - "--log.request.decision={{ .Values.queryFrontend.log.request.decision }}"
        {{- end }}
        - "--http-address=0.0.0.0:{{ .Values.queryFrontend.http.port }}"
        {{- if .Values.queryFrontend.queryRange.splitInterval }}
        - "--query-range.split-interval={{ .Values.queryFrontend.queryRange.splitInterval }}"
        {{- end }}
        {{- if .Values.queryFrontend.queryRange.maxRetriesPerRequest }}
        - "--query-range.max-retries-per-request={{ .Values.queryFrontend.queryRange.maxRetriesPerRequest }}"
        {{- end }}
        {{- if .Values.queryFrontend.queryRange.maxQueryLength }}
        - "--query-range.max-query-length={{ .Values.queryFrontend.queryRange.maxQueryLength }}"
        {{- end }}
        {{- if .Values.queryFrontend.queryRange.maxQueryParallelism }}
        - "--query-range.max-query-parallelism={{ .Values.queryFrontend.queryRange.maxQueryParallelism }}"
        {{- end }}
        {{- if .Values.queryFrontend.queryRange.responseCacheMaxFreshness }}
        - "--query-range.response-cache-max-freshness={{ .Values.queryFrontend.queryRange.responseCacheMaxFreshness }}"
        {{- end }}
        {{- if .Values.queryFrontend.queryRange.noPartialResponse }}
        - "--no-query-range.partial-response"
        {{- end }}
        {{- if .Values.queryFrontend.downstreamUrl }}
        - "--query-frontend.downstream-url={{ .Values.queryFrontend.downstreamUrl }}"
        {{- else }}
        - "--query-frontend.downstream-url=http://{{ include "thanos.componentname" (list $ "query") }}-http.svc.cluster.local:{{ .Values.query.http.port }}"
        {{- end }}
        {{- if .Values.queryFrontend.compressResponses }}
        - "--query-frontend.compress-responses"
        {{- end }}
        {{- if .Values.queryFrontend.logQueriesLongerThan }}
        - "--query-frontend.log_queries_longer_than={{ .Values.queryFrontend.logQueriesLongerThan }}"
        {{- end }}
        {{- if .Values.queryFrontend.queryRange.cache.inMemory }}
        - |-
          --query-range.response-cache-config="type": "IN-MEMORY"
          "config":
            {{- if .Values.queryFrontend.queryRange.cache.maxSize }}
            "max_size": "{{ .Values.queryFrontend.queryRange.cache.maxSize }}"
            {{- end }}
            {{- if .Values.queryFrontend.queryRange.cache.maxSizeItems }}
            "max_size_items": {{ .Values.queryFrontend.queryRange.cache.maxSizeItems }}
            {{- end }}
            {{- if .Values.queryFrontend.queryRange.cache.validity }}
            "validity": "{{ .Values.queryFrontend.queryRange.cache.validity }}"
            {{- end }}
        {{- end }}
        {{- if .Values.queryFrontend.qflabels.splitInterval }}
        - "--labels.split-interval={{ .Values.queryFrontend.qflabels.splitInterval }}"
        {{- end }}
        {{- if .Values.queryFrontend.qflabels.maxRetriesPerRequest }}
        - "--labels.max-retries-per-request={{ .Values.queryFrontend.qflabels.maxRetriesPerRequest }}"
        {{- end }}
        {{- if .Values.queryFrontend.qflabels.maxQueryParallelism }}
        - "--labels.max-query-parallelism={{ .Values.queryFrontend.qflabels.maxQueryParallelism }}"
        {{- end }}
        {{- if .Values.queryFrontend.qflabels.responseCacheMaxFreshness }}
        - "--labels.response-cache-max-freshness={{ .Values.queryFrontend.qflabels.responseCacheMaxFreshness }}"
        {{- end }}
        {{- if .Values.queryFrontend.qflabels.noPartialResponse }}
        - "--no-labels.partial-response"
        {{- end }}
        {{- if .Values.queryFrontend.qflabels.cache.inMemory }}
        - |-
          --labels.response-cache-config="type": "IN-MEMORY"
          "config":
            {{- if .Values.queryFrontend.qflabels.cache.maxSize }}
            "max_size": "{{ .Values.queryFrontend.qflabels.cache.maxSize }}"
            {{- end }}
            {{- if .Values.queryFrontend.qflabels.cache.maxSizeItems }}
            "max_size_items": {{ .Values.queryFrontend.qflabels.cache.maxSizeItems }}
            {{- end }}
            {{- if .Values.queryFrontend.qflabels.cache.validity }}
            "validity": "{{ .Values.queryFrontend.qflabels.cache.validity }}"
            {{- end }}
        {{- end }}
        {{- if .Values.queryFrontend.extraArgs }}
        {{ toYaml .Values.queryFrontend.extraArgs | nindent 8 }}
        {{- end }}
        ports:
        - name: http
          containerPort: {{ .Values.queryFrontend.http.port}}
        - name: grpc
          containerPort: {{ .Values.queryFrontend.grpc.port }}
        resources:
          {{ toYaml .Values.queryFrontend.resources | nindent 10 }}
        volumeMounts:
        {{- range .Values.queryFrontend.serviceDiscoveryFileConfigMaps }}
        - mountPath: /etc/query-frontend/{{ . }}
          name: {{ . }}
        {{- end }}
        {{- if .Values.queryFrontend.certSecretName }}
        - mountPath: /etc/certs
          name: {{ .Values.queryFrontend.certSecretName }}
          readOnly: true
        {{- end }}
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: http
        readinessProbe:
          httpGet:
            path: /-/ready
            port: http
      volumes:
      {{- range .Values.queryFrontend.serviceDiscoveryFileConfigMaps }}
      - name: {{ . }}
        configMap:
          defaultMode: 420
          name: {{ . }}
      {{- end }}
      {{- if .Values.queryFrontend.certSecretName }}
      - name: {{ .Values.queryFrontend.certSecretName }}
        secret:
          defaultMode: 420
          secretName: {{ .Values.queryFrontend.certSecretName }}
      {{- end }}
      {{- with .Values.queryFrontend.securityContext }}
      securityContext: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.queryFrontend.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
