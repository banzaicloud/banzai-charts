image:
  repository: quay.io/thanos/thanos
  tag: v0.8.1
  pullPolicy: IfNotPresent

store:
  enabled: true
  # Maximum size of items held in the index cache.
  indexCacheSize: 250MB
  # Maximum size of concurrently allocatable bytes for chunks.
  chunkPoolSize: 2GB
  # Maximum amount of samples returned via a single series call. 0 means no limit.
  # NOTE: for efficiency we take 120 as the number of samples in chunk (it cannot be bigger than that),
  # so the actual number of samples might be lower, even though the maximum could be hit.
  grpcSeriesSampleLimit: 0
  # Maximum number of concurrent Series calls.
  grpcSeriesMaxConcurrency: 20
  # Repeat interval for syncing the blocks between local and remote view.
  syncBlockDuration: 3m
  # Number of goroutines to use when syncing blocks from object storage.
  blockSyncConcurrency: 20
  # Log filtering level.
  logLevel: info
  # Add extra environment variables to store
  extraEnv: []
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the store service
  extraArgs: []
  # - "--extraargs=extravalue"
  #
  # Number of replicas running from store component
  replicaCount: 1
  # Extra labels for store pod template
  labels: {}
  #  cluster: example
  #
  # Extra annotations for store pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to store deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to store deployment
  deploymentAnnotations: {}
  #  extraAnnotation: extraAnnotationValue
  # Enable metrics collecting for compat service
  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
      # Labels for prometheus-operator to find servicemonitor
      labels: {}
  # The grpc endpoint to communicate with other components
  grpc:
    # grpc listen port number
    port: 10901
    # Service definition for query grpc service
    service:
      # Annotations to query grpc service
      annotations: {}
      # Labels to query grpc service
      labels: {}
    # Set up ingress for the grpc service
    ingress:
      enabled: false
      annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  # The http endpoint to communicate with other components
  http:
    # http listen port number
    port: 10902
    # Service definition for query http service
    service:
      type: ClusterIP
      # Annotations to query http service
      annotations: {}
      # Labels to query http service
      labels: {}
    # Set up ingress for the http service
    ingress:
      enabled: false
      annotations: {}
        # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local
  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for store pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}
  serviceAccount: ""
  # set up store readinessProbe & livenessProbe
  # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  livenessProbe: {}
  readinessProbe: {}
  # Setting time timePartioning will create multipale store deployments based on the number of partions
  # See https://thanos.io/components/store.md/#time-based-partioning
  timePartioning:
    - min: ""
      max: ""

query:
  enabled: true
  # Label to treat as a replica indicator along which data is deduplicated.
  # Still you will be able to query without deduplication using 'dedup=false' parameter.
  replicaLabel: ""
  # Enable --query.auto-downsampling option for query.
  autoDownsampling: false
  # Prefix for API and UI endpoints. This allows thanos UI to be served on a sub-path.
  # This option is analogous to --web.route-prefix of Promethus.
  webRoutePrefix: ""
  # Static prefix for all HTML links and redirect
  #  URLs in the UI query web interface. Actual
  #  endpoints are still served on / or the
  #  web.route-prefix. This allows thanos UI to be
  #  served behind a reverse proxy that strips a URL
  #  sub-path.
  webExternalPrefix: ""
  # Name of HTTP request header used for dynamic prefixing of UI links and redirects.
  # This option is ignored if web.external-prefix argument is set. Security risk: enable this
  # option only if a reverse proxy in front of thanos is resetting the header. The --web.prefix-header=X-Forwarded-Prefix option
  # can be useful, for example, if Thanos UI is served via Traefik reverse proxy with PathPrefixStrip option enabled, which sends the
  # stripped prefix value in X-Forwarded-Prefix header. This allows thanos UI to be served on a sub-path
  webPrefixHeader: ""
  # https://github.com/improbable-eng/thanos/issues/1015
  storeDNSResolver: miekgdns
  # Enable DNS discovery for stores
  storeDNSDiscovery: true
  # Enable DNS discovery for sidecars (this is for the chart built-in sidecar service)
  sidecarDNSDiscovery: true
  # Addresses of statically configured store API servers (repeatable).
  # The scheme may be prefixed with 'dns+' or 'dnssrv+' to detect store API servers through respective DNS lookups.
  stores: []
  #  - "dnssrv+_grpc._tcp.<service>.<namespace>.svc.cluster.local"
  #
  # Path to files that contains addresses of store API servers. The path can be a glob pattern (repeatable).
  serviceDiscoveryFiles: []
  # Refresh interval to re-read file SD files. It is used as a resync fallback.
  serviceDiscoveryInterval: 5m
  # Log filtering level.
  logLevel: info
  # Add extra environment variables to query
  extraEnv: []
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the query service
  extraArgs: []
  # - "--extraargs=extravalue"
  #
  # Number of replicas running from query component
  replicaCount: 1
  # Enable HPA for query component
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 3
    targetCPUUtilizationPercentage: 50
    targetMemoryUtilizationPercentage: 50
  # Enable podDisruptionBudget for query component
  podDisruptionBudget:
    enabled: false
      # minAvailable and maxUnavailable can't be used simultaneous. Choose one.
    minAvailable: 1
    #  maxUnavailable: 50%

  # The grpc endpoint to communicate with other components
  grpc:
    # grpc listen port number
    port: 10901
    # Service definition for query grpc service
    service:
      # Annotations to query grpc service
      annotations: {}
      # labels to query grpc service
      labels: {}
    # Set up ingress for the grpc service
    ingress:
      enabled: false
      annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local
  serviceAccount: ""

  # The http endpoint to communicate with other components
  http:
    # http listen port number
    port: 10902
    # Service definition for query http service
    service:
      type: ClusterIP
      # Annotations to query http service
      annotations: {}
      # Labels to query http service
      labels: {}
    # Set up ingress for the http service
    ingress:
      enabled: false
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  certSecretName: ""
  # Extra labels for query pod template
  labels: {}
  #  cluster: example
  #
  # Extra annotations for query pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to query deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to query deployment
  deploymentAnnotations: {}
  #  extraAnnotation: extraAnnotationValue
  #
  # Enable metrics collecting for compat service


  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
      # Labels for prometheus-operator to find servicemonitor
      labels: {}

  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for query pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}

compact:
  enabled: true
  # Minimum age of fresh (non-compacted) blocks before they are being processed.
  # Malformed blocks older than the maximum of consistency-delay and 30m0s will be removed.
  consistencyDelay: 30m
  # How long to retain raw samples in bucket. 0d - disables this retention
  retentionResolutionRaw: 30d
  # How long to retain samples of resolution 1 (5 minutes) in bucket. 0d - disables this retention
  retentionResolution5m: 120d
  # How long to retain samples of resolution 2 (1 hour) in bucket. 0d - disables this retention
  retentionResolution1h: 1y
  # Number of goroutines to use when syncing block metadata from object storage.
  compactConcurrency: 20
  # Number of goroutines to use when compacting groups.
  blockSyncConcurrency: 1
  # Log filtering level.
  logLevel: info
  # Compact service listening http port
  http:
    port: 10902
    service:
      labels: {}
  # Add extra environment variables to compact
  extraEnv:
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the compact service
  extraArgs:
  # - "--extraargs=extravalue"
  #
  # Data volume for the compactor to store temporary data defaults to emptyDir
  dataVolume:
    backend: {}
    #  persistentVolumeClaim:
    #    claimName: compact-data-volume
  # Create the specified persistentVolumeClaim in case persistentVolumeClaim is
  # used for the dataVolume.backend above and needs to be created.
  persistentVolumeClaim: {}
  #  name: compact-data-volume
  #  spec:
  #    storageClassName: ""
  #    accessModes: ["ReadWriteOnce"]
  #    resources:
  #      requests:
  #        storage: 100Gi
  #    selector: {}
  #    volumeName: ""
  #    volumeMode: ""
  # Extra labels for compact pod template
  labels: {}
  #  cluster: example
  #
  # Extra annotations for compact pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to compact deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to compact deployment
  deploymentAnnotations: {}
  #  extraAnnotation: extraAnnotationValue
  #
  # Enable metrics collecting for compat service
  metrics:
    # This is the Prometheus annotation type scraping configuration
    annotations:
      enabled: false
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
      # Labels for prometheus-operator to find servicemonitor
      labels: {}
  serviceAccount: ""

  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for compact pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}

bucket:
  enabled: true
  # Number of replicas running from bucket component
  replicaCount: 1
  # Log filtering level.
  logLevel: info
  # Refresh interval to download metadata from remote storage
  refresh: 30m
  # Timeout to download metadata from remote storage
  timeout: 5m
  # Prometheus label to use as timeline title
  label: ""
  # The http endpoint to communicate with other components
  http:
    # http listen port number
    port: 8080
    # Service definition for bucket http service
    service:
      type: ClusterIP
      # Annotations to bucket http service
      annotations: {}
      # Labels to bucket http service
      labels: {}
    # Set up ingress for the http service
    ingress:
      enabled: false
      annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local
  # Add extra environment variables to bucket
  extraEnv:
  # - name: ENV
  #   value: value
  #
  # Add extra arguments to the bucket service
  extraArgs:
  # - "--extraargs=extravalue"
  #
  # Extra labels for bucket pod template
  labels: {}
  #  cluster: example
  #
  # Extra annotations for bucket pod template
  annotations: {}
  #  example.com: default
  #
  # Add extra labels to bucket deployment
  deploymentLabels: {}
  #  extraLabel: extraLabelValue
  #
  # Add extra annotations to bucket deployment
  deploymentAnnotations: {}

  # Enable podDisruptionBudget for bucket component
  podDisruptionBudget:
    enabled: false
      # minAvailable and maxUnavailable can't be used simultaneous. Choose one.
    minAvailable: 1
    #  maxUnavailable: 50%

  # Optional securityContext
  securityContext: {}
  resources: {}
  #  limits:
  #    cpu: 2000m
  #    memory: 16Gi
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #
  # Node tolerations for server scheduling to nodes with taints
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
  tolerations: []
  # - key: "key"
  #   operator: "Equal|Exists"
  #   value: "value"
  #   effect: "NoSchedule|PreferNoSchedule|NoExecute(1.6 only)"
  #
  # Node labels for bucket pod assignment
  # Ref: https://kubernetes.io/docs/user-guide/node-selection/
  #
  nodeSelector: {}
  #
  # Pod affinity
  # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity
  affinity: {}
  serviceAccount: ""

sidecar:
  # NOTE: This is only the service references for the sidecar
  enabled: true
  # Enable metrics collecting for compat service
  metrics:
    # Enable ServiceMonitor https://github.com/coreos/prometheus-operator
    serviceMonitor:
      enabled: false
      # Labels for prometheus-operator to find servicemonitor
      labels: {}
  # The grpc endpoint to communicate with other components
  grpc:
    # grpc listen port number
    port: 10901
    # Service definition for bucket grpc service
    service:
      # Annotations to bucket grpc service
      annotations: {}
      # Labels to bucket grpc service
      labels: {}
    # Set up ingress for the grpc service
    ingress:
      enabled: false
      annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

  # The http endpoint to communicate with other components
  http:
    # http listen port number
    port: 10902
    # Service definition for bucket http service
    service:
      type: ClusterIP
      # Annotations to bucket http service
      annotations: {}
      # Labels to bucket http service
      labels: {}
    # Set up ingress for the http service
    ingress:
      enabled: false
      annotations: {}
        # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
      labels: {}
      path: "/"
      hosts:
        - "/"
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local


# This is the general backend configuration. Please se the examples below to configurate object store.
# More information can be found at thanos github repositoriy: https://github.com/thanos-io/thanos/blob/master/docs/storage.md
# Text representation of the configuration
objstoreFile: ""
# YAML representation of the configuration. It's mutually exclusive with objstoreFile.
objstore:
  # type: GCS
  # config:
  #   bucket: "thanos"
  #   service_account: |-
  #     {
  #       "type": "service_account",
  #       "project_id": "project",
  #       "private_key_id": "abcdefghijklmnopqrstuvwxyz12345678906666",
  #       "private_key": "-----BEGIN PRIVATE KEY-----\...\n-----END PRIVATE KEY-----\n",
  #       "client_email": "project@thanos.iam.gserviceaccount.com",
  #       "client_id": "123456789012345678901",
  #       "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  #       "token_uri": "https://oauth2.googleapis.com/token",
  #       "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  #       "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/thanos%40gitpods.iam.gserviceaccount.com"
  #     }
  #
  # type: S3
  # config:
  #   bucket: ""
  #   endpoint: ""
  #   region: ""
  #   access_key: ""
  #   insecure: false
  #   signature_version2: false
  #   encrypt_sse: false
  #   secret_key: ""
  #   put_user_metadata: {}
  #   http_config:
  #     idle_conn_timeout: 0s
  #     response_header_timeout: 0s
  #     insecure_skip_verify: false
  #   trace:
  #     enable: false
  #   part_size: 0
  #
  # type: AZURE
  # config:
  #   storage_account: ""
  #   storage_account_key: ""
  #   container: ""
  #   endpoint: ""
  #   max_retries: 0
