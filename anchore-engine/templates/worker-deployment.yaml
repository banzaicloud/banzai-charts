apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: "{{ template "anchore-engine.worker.fullname" . }}"
  labels:
    app: "{{ template "anchore-engine.name" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: "anchore-worker"
spec:
  replicas: {{ .Values.workerConfig.replicaCount }}
  selector:
    matchLabels:
      component: "anchore-worker"
      release: "{{ .Release.Name }}"
      app: "{{ template "anchore-engine.name" . }}"
      heritage: "{{ .Release.Service }}"
  template:
    metadata:
      labels:
        app: "{{ template "anchore-engine.name" . }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
        component: "anchore-worker"
    spec:
      containers:
      {{- if .Values.cloudsql.enabled  }}
      - name: cloudsql-proxy
        image: {{ .Values.cloudsql.image.repository }}:{{ .Values.cloudsql.image.tag }}
        imagePullPolicy: {{ .Values.cloudsql.image.pullPolicy }}
        command: ["/cloud_sql_proxy",
                  "-instances={{ .Values.cloudsql.instance }}=tcp:5432"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
      {{- end }}
      - name: {{ .Chart.Name }}-worker
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ANCHORE_ENGINE_SERVICES
          value: anchore-worker
        - name: ANCHORE_DB
          {{- if .Values.cloudsql.enabled }}
          value: {{ .Values.cloudsql.dbName }}
          {{- else }}
          value: {{ .Values.postgresql.postgresDatabase }}
          {{- end }}
        - name: ANCHORE_DB_HOST
          {{ if .Values.cloudsql.enabled  }}
          value: "localhost:5432"
          {{ else }}
          value: {{ template "anchore-engine.postgres.fullname" . }}
          {{ end }}
        - name: ANCHORE_DB_USER
          {{- if .Values.cloudsql.enabled }}
          valueFrom:
            secretKeyRef:
              name: {{ template "anchore-engine.fullname" . }}-cloudsql
              key: dbUser
          {{- else }}
          value: {{ .Values.postgresql.postgresUser }}
          {{- end }}
        - name: ANCHORE_DB_PASSWORD
          {{- if .Values.cloudsql.enabled }}
          valueFrom:
            secretKeyRef:
              name: {{ template "anchore-engine.fullname" . }}-cloudsql
              key: dbPassword
          {{- else }}
          value: {{ .Values.postgresql.postgresPassword }}
          {{- end }}
        - name: ANCHORE_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "anchore-engine.fullname" . }}
              key: adminPassword
        - name: ANCHORE_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ANCHORE_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ANCHORE_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: analyzer-api
          containerPort: {{ .Values.workerConfig.port }}
        volumeMounts:
        - name: config-volume
          mountPath: /config
        {{- if .Values.globalConfig.internalServicesSslEnabled }}
        - name: certs
          mountPath: {{ default "/certs" .Values.workerConfig.ssl.CertDir }}
          readOnly: true
        {{- end }}
        - name: analysis-scratch
          mountPath: {{ .Values.workerConfig.analysisScratchVolume.mountPath }}
        livenessProbe:
          exec:
            command:
            - pgrep
            - twistd
          initialDelaySeconds: 10
          periodSeconds: 60
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /health
            port: analyzer-api
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 10
        resources:
{{ toYaml .Values.workerConfig.resources | indent 10 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ template "anchore-engine.worker.fullname" .}}
        {{- if .Values.globalConfig.internalServicesSslEnabled }}
        - name: certs
          secret:
            secretName: {{ .Values.workerConfig.ssl.certSecret }}
        {{- end }}
        - name: analysis-scratch
          {{ toYaml .Values.workerConfig.analysisScratchVolume.details -}}
    {{- if .Values.workerConfig.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.workerConfig.nodeSelector | indent 8 }}
    {{- end }}
    {{- with .Values.workerConfig.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.workerConfig.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
