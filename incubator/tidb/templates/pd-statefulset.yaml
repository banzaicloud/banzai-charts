apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ template "pd.tidb.fullname" . }}"
  labels:
    app: "{{ template "pd.tidb.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  serviceName: "{{ template "pd.tidb.fullname" . }}"
  replicas: {{ default 3 .Values.pd.replicaCount }}
  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      name: {{ template "tidb.fullname" . }}
      labels:
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
        app: {{ template "tidb.fullname" . }}
        component: "{{ template "pd.tidb.fullname" . }}"

    spec:
      containers:
      - name: "{{ template "pd.tidb.fullname" . }}"
        image: "{{ .Values.pd.image }}"
        imagePullPolicy: "{{ .Values.pd.imagePullPolicy }}"
        
        env:
        - name: INITIAL_CLUSTER_SIZE
          value: {{ default 3 .Values.replicaCount | quote }}
        - name: SET_NAME
          value: "{{ template "pd.tidb.fullname" . }}"

        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP

        command:
        - "/bin/sh"
        - "-ec"
        - |

          HOSTNAME=$(hostname)

          PEERS=""

          for i in $(seq 0 $((${INITIAL_CLUSTER_SIZE} - 1))); do
            PEERS="${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:{{ .Values.pd.service.PeerPort }}"
          done

          /pd-server --name=${HOSTNAME} \
          --client-urls=http://0.0.0.0:{{ .Values.pd.service.ClientPort }} \
          --peer-urls=http://0.0.0.0:{{ .Values.pd.service.PeerPort }} \
          --advertise-client-urls=http://$(MY_POD_IP):{{ .Values.pd.service.ClientPort }} \
          --advertise-peer-urls=http://${HOSTNAME}.${SET_NAME}:{{ .Values.pd.service.PeerPort }} \
          --initial-cluster ${PEERS}

        ports:
        - containerPort: {{ .Values.pd.service.ClientPort }}
          name: pd-server
          protocol: TCP
        - containerPort: {{ .Values.pd.service.PeerPort }}
          name: peer
          protocol: TCP

        resources:
{{ toYaml .Values.pd.resources | indent 10 }}
