# Golang CircleCI 2.0 configuration file
version: 2.0

jobs:
  build:
    docker:
      - image: banzaicloud/helm-aws-s3
        environment:
          AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
          AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID

    steps:
      - checkout
      - run:
          name: Build Charts
          no_output_timeout: 2700
          environment:

          command: |
            GIT_REV=$(git rev-parse --short HEAD)
            GIT_BRANCH=${CIRCLE_BRANCH}
            GIT_TAG=${CIRCLE_TAG}

            helm init -c

            if [ "$GIT_TAG" = "0.3.0" ]; then
                BANZAICLOUD_STABLE_REPO=http://kubernetes-charts.banzaicloud.com
            elif [ "$GIT_TAG" = "" ]; then
                BANZAICLOUD_STABLE_REPO=http://kubernetes-charts.banzaicloud.com/branch/${GIT_BRANCH}/
            elif [ "$GIT_TAG" != "" ]; then
                BANZAICLOUD_STABLE_REPO=http://kubernetes-charts.banzaicloud.com/release/${GIT_TAG}/
            fi

            helm repo remove local

            echo "REPO -> STABLE"

            #TODO: Dirty hack to solve multi level dependency
            for i in $(seq 1 3);
            do

                helm repo add banzaicloud-stable ${BANZAICLOUD_STABLE_REPO} || true

                helm repo update
                helm repo list

                mkdir -p /tmp/s3-chart/stable

                echo "Dependency update and build"
                find . -maxdepth 1 ! -path /tmp  ! -path . ! -path ./.circleci ! -path ./.git -type d -exec helm dependency update {} \; -exec helm dependency build {} \;

                echo "Remove requirements.lock files"
                find . -maxdepth 3 -name requirements.lock -type f -delete -print

                echo "Create helm packages"
                find . -maxdepth 1 ! -path /tmp  ! -path . ! -path ./.circleci ! -path ./.git -type d -print -exec helm package -d /tmp/s3-chart/stable {} \;

                helm repo index --url $BANZAICLOUD_STABLE_REPO /tmp/s3-chart/stable

                if [ "$GIT_TAG" = "0.3.0" ]; then
                    s3cmd sync /tmp/s3-chart/stable/* s3://kubernetes-charts.banzaicloud.com/
                elif [ "$GIT_TAG" = "" ]; then
                    s3cmd sync /tmp/s3-chart/stable/* s3://kubernetes-charts.banzaicloud.com/branch/${GIT_BRANCH}/
                elif [ "$GIT_TAG" != "" ]; then
                    s3cmd sync /tmp/s3-chart/stable/* s3://kubernetes-charts.banzaicloud.com/release/${GIT_TAG}/
                fi
            done

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
