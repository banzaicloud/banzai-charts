apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cadence.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "cadence.name" . }}
    helm.sh/chart: {{ include "cadence.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | replace "+" "_" }}
    app.kubernetes.io/part-of: {{ .Chart.Name }}
data:
  config_template.yaml: |-
    log:
      stdout: true
      level: {{ .Values.server.config.logLevel | quote }}
      levelKey: {{ .Values.server.config.levelKey | quote }}

    persistence:
      defaultStore: default
      visibilityStore: visibility
      numHistoryShards: {{ .Values.server.config.numHistoryShards }}
      datastores:
        default:
          {{- if eq (include "cadence.persistence.driver" (list . "default")) "cassandra" }}
          nosql:
            pluginName: cassandra
            hosts: {{ include "cadence.persistence.cassandra.hosts" (list . "default") }}
            port: {{ include "cadence.persistence.cassandra.port" (list . "default") }}
            password: {{ `{{ .Env.CADENCE_STORE_PASSWORD }}` }}
            {{- with (omit .Values.server.config.persistence.default.cassandra "hosts" "port" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if eq (include "cadence.persistence.driver" (list . "default")) "sql" }}
          sql:
            pluginName: {{ include "cadence.persistence.sql.pluginName" (list . "default") }}
            databaseName: {{ .Values.server.config.persistence.default.sql.database }}
            connectAddr: "{{ include "cadence.persistence.sql.host" (list . "default") }}:{{ include "cadence.persistence.sql.port" (list . "default") }}"
            connectProtocol: "tcp"
            user: {{ include "cadence.persistence.sql.user" (list . "default") }}
            password: {{ `{{ .Env.CADENCE_STORE_PASSWORD }}` }}
            {{- with (omit .Values.server.config.persistence.default.sql "pluginName" "host" "port" "connectAddr" "connectProtocol" "database" "databaseName" "user" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
        visibility:
          {{- if eq (include "cadence.persistence.driver" (list . "visibility")) "cassandra" }}
          nosql:
            pluginName: cassandra
            hosts: {{ include "cadence.persistence.cassandra.hosts" (list . "visibility") }}
            port: {{ include "cadence.persistence.cassandra.port" (list . "visibility") }}
            password: {{ `{{ .Env.CADENCE_VISIBILITY_STORE_PASSWORD }}` }}
            {{- with (omit .Values.server.config.persistence.visibility.cassandra "hosts" "port" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
          {{- if eq (include "cadence.persistence.driver" (list . "visibility")) "sql" }}
          sql:
            pluginName: {{ include "cadence.persistence.sql.pluginName" (list . "visibility") }}
            databaseName: {{ .Values.server.config.persistence.visibility.sql.database }}
            connectAddr: "{{ include "cadence.persistence.sql.host" (list . "visibility") }}:{{ include "cadence.persistence.sql.port" (list . "visibility") }}"
            connectProtocol: "tcp"
            user: {{ include "cadence.persistence.sql.user" (list . "visibility") }}
            password: {{ `{{ .Env.CADENCE_VISIBILITY_STORE_PASSWORD }}` }}
            {{- with (omit .Values.server.config.persistence.visibility.sql "pluginName" "host" "port" "connectAddr" "connectProtocol" "database" "databaseName" "user" "password" "existingSecret") }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}

    ringpop:
      name: cadence
      bootstrapMode: dns
      bootstrapHosts:
       {{- if ($.Values.connectionType.thrift.enabled) }}  
        - {{ include "cadence.componentname" (list . "frontend-headless") }}:{{ .Values.server.frontend.service.port | default `{{ default .Env.FRONTEND_PORT 7933 }}` }}
        - {{ include "cadence.componentname" (list . "history-headless") }}:{{ .Values.server.history.service.port | default `{{ default .Env.HISTORY_PORT 7934 }}` }}
        - {{ include "cadence.componentname" (list . "matching-headless") }}:{{ .Values.server.matching.service.port | default `{{ default .Env.MATCHING_PORT 7935 }}` }}
        - {{ include "cadence.componentname" (list . "worker-headless") }}:{{ .Values.server.worker.service.port | default `{{ default .Env.WORKER_PORT 7939 }}` }}
      {{- end }}
      {{- if ($.Values.connectionType.grpc.enabled) }}  
        - {{ include "cadence.componentname" (list . "frontend-headless") }}:{{ .Values.server.frontend.service.grpcPort | default `{{ default .Env.FRONTEND_GRPC_PORT 7833 }}` }}
        - {{ include "cadence.componentname" (list . "history-headless") }}:{{ .Values.server.history.service.grpcPort | default `{{ default .Env.HISTORY_GRPC_PORT 7834 }}` }}
        - {{ include "cadence.componentname" (list . "matching-headless") }}:{{ .Values.server.matching.service.grpcPort | default `{{ default .Env.MATCHING_GRPC_PORT 7835 }}` }}
        - {{ include "cadence.componentname" (list . "worker-headless") }}:{{ .Values.server.worker.service.grpcPort | default `{{ default .Env.WORKER_PORT 7839 }}` }}
      {{- end }}

      maxJoinDuration: 30s

    services:
      frontend:
        rpc:
        {{- if ($.Values.connectionType.thrift.enabled) }}  
          port: {{ include "cadence.frontend.internalPort" . | default `{{ default .Env.FRONTEND_PORT 7933 }}` }}
        {{- end }}
        {{- if ($.Values.connectionType.grpc.enabled) }}  
          grpcPort: {{ include "cadence.frontend.internalGRPCPort" . | default `{{ default .Env.FRONTEND_GRPC_PORT 7833 }}` }}
        {{- end }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: frontend
        {{- if or .Values.server.metrics.prometheus .Values.server.frontend.metrics.prometheus }}
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.frontend.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- else if or .Values.server.metrics.statsd .Values.server.frontend.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.frontend.metrics.statsd.hostPort | quote }}
            prefix: {{ `{{ default .Env.STATSD_FRONTEND_PREFIX "cadence.frontend" }}` }}
        {{- end}}

      history:
        rpc:
        {{- if ($.Values.connectionType.thrift.enabled) }}  
          port: {{ include "cadence.history.internalPort" . | default `{{ default .Env.HISTORY_PORT default 7934 }}` }}
        {{- end }}
        {{- if ($.Values.connectionType.grpc.enabled) }}  
          grpcPort: {{ include "cadence.history.internalGRPCPort" . | default `{{ default .Env.HISTORY_GRPC_PORT 7834 }}` }}
        {{- end }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: history
        {{- if or .Values.server.metrics.prometheus .Values.server.frontend.metrics.prometheus }}
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.history.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- else if or .Values.server.metrics.statsd .Values.server.history.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.history.metrics.statsd.hostPort | quote }}
            prefix: {{ `{{ default .Env.STATSD_HISTORY_PREFIX "cadence.history" }}` }}
        {{- end}}

      matching:
        rpc:
        {{- if ($.Values.connectionType.thrift.enabled) }}  
          port: {{ include "cadence.matching.internalPort" . | default `{{ default .Env.MATCHING_PORT 7935 }}` }}
        {{- end }}
        {{- if ($.Values.connectionType.grpc.enabled) }}  
          grpcPort: {{ include "cadence.matching.internalGRPCPort" . | default `{{ default .Env.MATCHING_GRPC_PORT 7835 }}` }}
        {{- end }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: matching
        {{- if or .Values.server.metrics.prometheus .Values.server.frontend.metrics.prometheus }}
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.matching.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- else if or .Values.server.metrics.statsd .Values.server.matching.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.matching.metrics.statsd.hostPort | quote }}
            prefix: {{ `{{ default .Env.STATSD_FRONTEND_PREFIX "cadence.matching" }}` }}
        {{- end}}

      worker:
        rpc:
        {{- if ($.Values.connectionType.thrift.enabled) }}  
          port: {{ include "cadence.worker.internalPort" . | default `{{ default .Env.WORKER_PORT 7939 }}` }}
        {{- end }}
        {{- if ($.Values.connectionType.grpc.enabled) }}  
          grpcPort: {{ include "cadence.worker.internalGRPCPort" . | default `{{ default .Env.WORKER_GRPC_PORT 7839 }}` }}
        {{- end }}
          bindOnIP: {{ `{{ default .Env.POD_IP "0.0.0.0" }}` }}
        metrics:
          tags:
            type: worker
        {{- if or .Values.server.metrics.prometheus .Values.server.frontend.metrics.prometheus }}
          prometheus:
            timerType: {{ default .Values.server.metrics.prometheus.timerType .Values.server.worker.metrics.prometheus.timerType }}
            listenAddress: "0.0.0.0:9090"
        {{- else if or .Values.server.metrics.statsd .Values.server.worker.metrics.statsd }}
          statsd:
            hostPort: {{ default .Values.server.metrics.statsd.hostPort .Values.server.worker.metrics.statsd.hostPort | quote }}
            prefix: {{ `{{ default .Env.STATSD_WORKER_PREFIX "cadence.worker" }}` }}
        {{- end}}

    clusterGroupMetadata:
      failoverVersionIncrement: {{ .Values.server.config.clusterMetadata.maximumClusterCount }}
      primaryClusterName: {{ .Values.server.config.clusterMetadata.masterClusterName }}
      currentClusterName: {{ .Values.server.config.clusterMetadata.currentClusterName }}
      clusterRedirectionPolicy:
        policy: {{ $.Values.server.config.dcRedirectionPolicy.policy }}
      clusterGroup:
      {{- $currentClusterName := .Values.server.config.clusterMetadata.currentClusterName }}
      {{- $currentClusterIndex := 0 }}
      {{- $frontendComponentName := (include "cadence.componentname" (list . "frontend")) }}
      {{- $serverFrontendServiceTransport := .Values.server.frontend.service.transport | default "grpc" }}
      {{- $serverFrontendServicePort := (.Values.server.frontend.service.grpcPort | int) | default 7833 }}
      {{- if eq $serverFrontendServiceTransport "tchannel" }}
        {{- $serverFrontendServicePort = (.Values.server.frontend.service.port | int) }}
      {{- end }}
      {{- range $clusterIndex, $clusterInfo := .Values.server.config.clusterMetadata.clusterInformation }}
        {{- if eq $clusterInfo.name $currentClusterName }}{{ $currentClusterIndex = $clusterIndex }}{{ end }}
        {{ $clusterInfo.name }}:
          enabled: {{ $clusterInfo.enabled }}
          initialFailoverVersion: {{ $clusterIndex }}
          rpcName: "{{ $frontendComponentName }}"
          rpcAddress: "{{ $clusterInfo.rpcAddress | default (printf "%s%s%d" $frontendComponentName ":" $serverFrontendServicePort ) }}"
          rpcTransport: "{{ $serverFrontendServiceTransport }}"
      {{- end }}

    dcRedirectionPolicy:
      policy: {{ `{{ default .Env.DC_REDIRECT_POLICY "selected-apis-forwarding" }}` }}
      toDC: ""

    archival:
      history:
        status: "disabled"
      visibility:
        status: "disabled"

    dynamicconfig:
      client: {{ $.Values.dynamicconfig.client }}
      configstore:
        pollInterval: {{ $.Values.dynamicconfig.configstore.pollInterval | default "10s" | quote  }}
        updateRetryAttempts: {{ $.Values.dynamicconfig.configstore.updateRetryAttempts }}
        FetchTimeout: {{ $.Values.dynamicconfig.configstore.FetchTimeout | default "2s" | quote }}
        UpdateTimeout: {{ $.Values.dynamicconfig.configstore.UpdateTimeout | default "2s" | quote }}
      filebased:
        filepath: {{ $.Values.dynamicconfig.filebased.filepath }}
        pollInterval: {{ $.Values.dynamicconfig.filebased.pollInterval | default "10s" | quote }}

  dynamic_config.yaml: |-
    {{- toYaml .Values.dynamicConfig.values | nindent 12 }}
