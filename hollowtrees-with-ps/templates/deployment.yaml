apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ template "hollowtrees-with-ps.fullname" . }}"
  labels:
    app: "{{ template "hollowtrees-with-ps.fullname" . }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: "{{ template "hollowtrees-with-ps.name" . }}"
        release: "{{ .Release.Name }}"
      {{- with .Values.podAnnotations }}
      annotations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      containers:
      - name: "hollowtrees"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.promalert.listenPort }}
        - name: healthcheck
          containerPort: {{ .Values.healthcheck.listenPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthcheck.endpoint | quote }}
            port: healthcheck
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: {{ .Values.healthcheck.endpoint | quote }}
            port: healthcheck
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
        {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        - name: config
          mountPath: /root/config/
      - name: "pipeline-scaler-plugin"
        image: "{{ .Values.htpsp.image.repository }}:{{ .Values.htpsp.image.tag }}"
        imagePullPolicy: {{ .Values.htpsp.image.imagePullPolicy | quote }}
        env:
        - name: HTPSP_LOG_FORMAT
          value: {{ .Values.htpsp.log.format | quote }}
        - name: HTPSP_LOG_LEVEL
          value: {{ .Values.htpsp.log.level | quote }}
        - name: HTPSP_HEALTHCHECK_LISTENADDRESS
          value: ":{{ .Values.htpsp.healthcheck.listenPort }}"
        - name: HTPSP_HEALTHCHECK_ENDPOINT
          value: {{ .Values.htpsp.healthcheck.endpoint | quote }}
        - name: HTPSP_EVENTHANDLER_LISTENADDRESS
          value: ":{{ .Values.htpsp.listenPort }}"
        - name: HTPSP_SCALER_PIPELINEINTERNALADDRESS
          value: {{ .Values.htpsp.scaler.pipelineInternalAddress | quote }}
        - name: HTPSP_SCALER_RECOMMENDERADDRESS
          value: {{ .Values.htpsp.scaler.recommenderAddress | quote }}
        - name: HTPSP_SCALER_RETRIES
          value: {{ .Values.htpsp.scaler.retries | quote }}
        - name: HTPSP_SCALER_WAITBETWEENRETRIES
          value: {{ .Values.htpsp.scaler.waitBetweenRetries | quote }}
        - name: HTPSP_SCALER_WAITINQUEUE
          value: {{ .Values.htpsp.scaler.waitInQueue | quote }}
        ports:
        - name: http
          containerPort: {{ .Values.htpsp.listenPort }}
        - name: healthcheck
          containerPort: {{ .Values.htpsp.healthcheck.listenPort }}
        livenessProbe:
          httpGet:
            path: {{ .Values.htpsp.healthcheck.endpoint | quote }}
            port: healthcheck
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: {{ .Values.htpsp.healthcheck.endpoint | quote }}
            port: healthcheck
          initialDelaySeconds: 10
          timeoutSeconds: 3
          periodSeconds: 5
        resources:
        {{- toYaml .Values.htpsp.resources | nindent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "hollowtrees-with-ps.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
      {{- toYaml . | nindent 8 }}
      {{- end }}
