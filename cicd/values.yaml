## CI/CD server and agent Deplyoment annotations
##
annotations: {}

## CI/CD server and agent Deplyoment labels
##
labels: {}

## Resource definitions for Kubernetes resources
replicaCount: 1
# Upgrade strategy
strategy: {}

## The official CI/CD image, change tag to use a different version.
## https://hub.docker.com/r/banzaicloud/cicd/tags/
##
image:
  repository: "banzaicloud/cicd"
  tag: "0.8.7"
  pullPolicy: "IfNotPresent"

rbac:
  enabled: true

serviceAccount:
  create: false
  name:

github:
  enabled: true
  existingSecret: ""
  clientSecret: ""
  clientID: ""

gitlab:
  enabled: false
  existingSecret: ""
  clientSecret: ""
  clientID: ""

## The hostname where the Banzai Cloud Control Plane is hosted
##
cpHost: cp.example.com

pipelineBasePath: /pipeline

service:
  httpPort: 80

  ## If service.type is not set to NodePort, the following statement
  ## will be ignored.
  ##
  # nodePort: 32015

  ## Service type can be set to ClusterIP, NodePort or LoadBalancer.
  ##
  type: ClusterIP

ingress:
  ## If true, CI/CD Ingress will be created.
  ##
  enabled: false

  ## CI/CD Ingress annotations
  ##
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  ## CI/CD hostnames must be provided if Ingress is enabled
  ##
  # hosts:
  #   - build.domain.io

  ## CI/CD Ingress TLS configuration secrets
  ## Must be manually created in the namespace
  ##
  # tls:
  #   - secretName: pipeline-cicd-tls
  #     hosts:
  #       - build.domain.io

server:
  ## If not set, it will be autofilled with the cluster host.
  ##
  # host: "https://build.domain.io"

  ## CI/CD server configuration.
  ## Values in here get injected as environment variables.
  ## https://beta.banzaicloud.io/docs/cicd/environment/
  ##
  env:
    CICD_DEBUG: "true"
    CICD_OPEN: "true"
    CICD_REPO_CONFIG: ".banzaicloud/pipeline.yaml"
    # CICD_DATABASE_DRIVER: "sqlite3"
    # CICD_DATABASE_DATASOURCE: "/var/lib/cicd/cicd.sqlite"

    ## CI/CD requires some environment variables to bootstrap the
    ## git service or it won't start up.
    ## Uncomment this and add your own custom configuration.
    ##
    # CICD_PROVIDER: "github"
    # CICD_OPEN: "true"
    # CICD_GITHUB: "true"
    # CICD_ORGS: "my-github-org,my-other-github-org"
    # CICD_ADMIN:"admin-1,admin-2"
    # CICD_GITHUB_CLIENT: "github-oauth2-client-id"
    # CICD_GITHUB_SECRET: "github-oauth2-client-secret"

  ## CPU and memory limits for CI/CD server
  ##
  resources: {}
  #  requests:
  #    memory: 32Mi
  #    cpu: 40m
  #  limits:
  #    memory: 2Gi
  #    cpu: 1

##
## MySQL configuration
## Read more: https://github.com/helm/charts/tree/master/stable/mysql
##
mysql:
  enabled: false

## Postgres configuration
## Read more: https://github.com/helm/charts/tree/master/stable/postgresql
##
postgres:
  enabled: true
  service: {}

##
## CloudSQL configuration
## Read more: https://github.com/rimusz/charts/tree/master/stable/gcloud-sqlproxy
##
cloudsql:
  enabled: false
  cloudsql:
    instances: []
    # instances:
    #   - project:
    #     region:
    #     instance:
    #     port:

# Database configuration
database:
  # mysql, postgres
  driver: ""
  host: ""
  port: ""
  name: "cicd"
  username: "cicd-rw"
  password: ""
  existingSecret: ""

global:
  postgresql: {}

agent:
  ## CI/CD  agent configuration.
  ## Values in here get injected as environment variables.
  ## https://beta.banzaicloud.io/docs/cicd/environment/
  ##
  env:
    CICD_DEBUG: "false"
    CICD_MAX_PROCS: "16"

  ## CPU and memory limits for CI/CD agent
  ##
  resources: {}
  #  requests:
  #    memory: 32Mi
  #    cpu: 40m
  #  limits:
  #    memory: 2Gi
  #    cpu: 1

## Uncomment this if you want to set a specific shared secret between
## the agents and servers, otherwise this will be auto-generated.
##
sharedSecret: "ss"
